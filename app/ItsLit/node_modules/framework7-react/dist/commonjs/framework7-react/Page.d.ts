/// <reference types="react" />
import * as React from 'react';
export interface IPageProps {
    name?: string;
    cached?: boolean;
    navbarFixed?: boolean;
    navbarThrough?: boolean;
    toolbarFixed?: boolean;
    toolbarThrough?: boolean;
    tabbarFixed?: boolean;
    tabbarThrough?: boolean;
    tabbarLabelsFixed?: boolean;
    tabbarLabelsThrough?: boolean;
    withSubnavbar?: boolean;
    subnavbar?: boolean;
    noNavbar?: boolean;
    noToolbar?: boolean;
    noTabbar?: boolean;
    pullToRefresh?: boolean;
    pullToRefreshDistance?: number;
    ptrDistance?: number;
    pullToRefreshLayer?: boolean;
    ptrLayer?: boolean;
    infiniteScroll?: boolean | string;
    infiniteScrollDistance?: number;
    infiniteScrollPreloader?: boolean;
    hideBarsOnScroll?: boolean;
    hideNavbarOnScroll?: boolean;
    hideToolbarOnScroll?: boolean;
    hideTabbarOnScroll?: boolean;
    messages?: boolean;
    tabs?: boolean;
    noPageContent?: boolean;
    loginScreen?: boolean;
    theme?: string;
    layout?: string;
    noSwipeback?: boolean;
    onPtrPullstart?: (eventArgs?: any) => void;
    onPtrPullmove?: (eventArgs?: any) => void;
    onPtrPullend?: (eventArgs?: any) => void;
    onPtrRefresh?: (eventArgs?: any) => void;
    onPtrDone?: (eventArgs?: any) => void;
    onInfinite?: (eventArgs?: any) => void;
    onPageBeforeinit?: (eventArgs?: any) => void;
    onPageInit?: (eventArgs?: any) => void;
    onPageReinit?: (eventArgs?: any) => void;
    onPageBeforeanimation?: (eventArgs?: any) => void;
    onPageAfteranimation?: (eventArgs?: any) => void;
    onPageBeforeremove?: (eventArgs?: any) => void;
    onPageBack?: (eventArgs?: any) => void;
    onPageAfterback?: (eventArgs?: any) => void;
    staticSlot?: React.ReactElement<any>;
    fixedSlot?: React.ReactElement<any>;
    id?: string;
    className?: string;
    style?: {
        [cssAttribute: string]: string;
    };
}
export declare const Page: React.ComponentClass<IPageProps>;
